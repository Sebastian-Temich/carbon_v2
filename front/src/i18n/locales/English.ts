// The following are the default values for the configuration options
export const English = {
  investorwallet: {
    name: 'Investor wallet',
    unitCount: 'Unit count',
    unitPrice: 'Unit price',
    status: 'Status',
  },
  dashboard: {
    name: 'Dashboard',
  },
  header: {
    name: 'Name',
    countries: 'Countries',
    searchByName: 'Search by name',
    sdgs: 'SDGs',
    projectStandards: 'Project standards',
    creationDate: 'Creation date',
    totalUnitCount: 'Total unit count',
    actions: 'Actions',
  },
  deleteData: {
    title: 'Delete confirmation',
    content: 'Are you sure you want to delete moderator?',
    responseTitle: 'Moderator deleted',
    responseContentStart: 'Moderator',
    responseContentEnd: 'was deleted',
  },
  button: {
    sellButtonLabel: 'Sell',
    retireButtonLabel: 'Retire',
    retirementConfirmationButtonTooltip: 'Unit retirement confirmation',
    retiredUnitsFileName: 'retired_units.pdf',
    acceptButtonLabel: 'Accept',
    rejectButtonLabel: 'Reject',
    cancelConfirmationMessage: 'Are you sure you want to cancel?',
    new: 'New',
    dismiss: 'Dismiss',
    cancel: 'Cancel',
    add: 'Add',
    delete: 'Delete',
    submit: 'Submit',
    remove: 'Remove',
    save: 'Save',
    edit: 'Edit',
    reset: 'Reset',
    clear: 'Clear',
    addToCart: 'Add to cart',
    logs: 'Logs',
  },
  carContent: {
    noProductsFoundMessage: 'No products found.',
  },
  toast: {
    formDataInvalidMessage: 'Form data is not valid',
    internalServerError: 'Internal server error',
    unknownErrorMessage: 'Unknown error',
    minUnitCountCannotBeGreaterThanMaxUnitCount:
      'Min unit count cannot be greater than max unit count',
    createDateFromCannotBeGreaterThanCreateDateTo:
      'Creation date from cannot be greater than creation date to',
  },
  offset: {
    acceptOffsetTitle: 'Accept an offset',
    acceptOffsetConfirmationMessage: 'Are you sure you want to accept offset?',
    acceptOffsetSuccessMessage:
      'The offset belonging to the project {{projectName}} has been accepted',
    rejectOffsetTitle: 'Reject an offset',
    rejectOffsetConfirmationMessage: 'Are you sure you want to reject an offset?',
    rejectOffsetSuccessMessage:
      'The offset belonging to the project {{projectName}} has been rejected',
    sellOffsetModalTitle: 'Sell an offset',
    sellOffsetModalContent: 'Are you sure you want to sell an offset?',
    sellingOffsetsModalTitle: 'Selling offsets',
    sellingOffsetsModalContent: 'You have placed an offer on marketplace',
    buyOffsetModalTitle: 'Buy an offset',
    buyOffsetModalContent: 'Are you sure you want to buy an offset?',
    buyingOffsetsModalTitle: 'Buying offsets',
    buyingOffsetsModalContent: 'Carbon employee will contact you to complete the transaction.',
    retireUnitContent: 'Do you want to retire {{count}} units?',
    retireModalTitle: 'Offset Retire',
    retireModalContent: 'You retired offset units',
    retireUnit: 'Retire Unit',
    offsetDetails: 'Offset Details',
    shortDescription: 'Short description',
    auditUnit: 'Audit unit',
    unitType: 'Unit Type',
    unitCreationYear: 'Year of creation',
    projectDetails: 'Project Details',
    description: 'Description',
    address: 'Address',
    country: 'Country',
    standards: 'Standards',
    projectStandards: 'Project standards',
    sustainableDevelopmentGoals: 'Sustainable development goals',
    circularity: 'Circularity',
    dates: 'Dates',
    projectStarts: 'Project starts',
    expectedEndDate: 'Expected end date',
    unitGeneration: 'Unit generation',
    list: 'Offsets list',
    title: 'Add Offsets',
    titleOneOffset: 'Add Offset',
    name: 'Project name',
    projectList: 'Project List',
    developerOffer: 'Developer search',
    myOffer: 'My offer',
  },
  register: {
    companyNameLabel: 'Company name',
    nipLabel: 'NIP',
    regonLabel: 'REGON',
    krsLabel: 'KRS',
    streetLabel: 'Street',
    cityLabel: 'City',
    postalCodeLabel: 'Postal code',
    firstNameLabel: 'First name',
    lastNameLabel: 'Last name',
    emailLabel: 'Email',
    passwordLabel: 'Password',
    identityCardNumberLabel: 'Identity card number',
    phoneNumberLabel: 'Phone number',
    acceptTermsLabel: 'I agree to the terms and conditions',
    registerButtonLabel: 'Register',
    forgotPassword: 'Forgot password?',
    or: 'or',
    signIn: 'sign in',
    toCarbon: 'to carbon',
    welcome: 'Welcome, please use the form to sign-in.',
  },
  yup: {
    auth: {
      invalidEmail: 'Invalid email',
      emailRequired: 'Email required',
      passwordRequired: 'Password required',
    },
    edit: {
      unitCountRequiredErrorMessage: 'Unit count required',
      unitPriceRequiredErrorMessage: 'Unit price required',
    },
    register: {
      company: {
        nameRequiredErrorMessage: 'Company name required',
        nipInvalidErrorMessage: 'Enter valid NIP, 10 digits',
        nipRequiredErrorMessage: 'NIP required',
        krsInvalidErrorMessage: 'Enter valid KRS, 10 digits',
        krsRequiredErrorMessage: 'KRS required',
        regonInvalidErrorMessage: 'Enter valid REGON, 9 or 14 digits',
        regonRequiredErrorMessage: 'REGON required',
        representativesRequiredErrorMessage: 'You need to fill each field',
        representativeRequiredErrorMessage: 'Representative required',
        address: {
          streetRequiredErrorMessage: 'Street required',
          cityRequiredErrorMessage: 'City required',
          postalCodeRequiredErrorMessage: 'Postal code required',
        },
      },
      emailRequiredErrorMessage: 'Email required',
      emailInvalidErrorMessage: 'Invalid email',
      firstNameRequiredErrorMessage: 'First name required',
      lastNameRequiredErrorMessage: 'Last name required',
      acceptRequiredErrorMessage: 'You need to acccept terms and conditions',
      acceptInvalidErrorMessage: 'The terms and conditions must be accepted.',
      phoneNumberRequiredErrorMessage: 'Phone number required',
      phoneNumberInvalidErrorMessage: 'Enter valid phone number',
      identityCardNumberRequiredErrorMessage: 'Identity card number required',
      identityCardNumberInvalidErrorMessage: 'Enter valid Id number',
    },
    error: {
      imageSize: 'Image size should be less than 5MB',
    },
    offset: {
      validationUnitCountError: 'Number is not valid',
      validationUnitCountRequired: 'Number of units required',
      validationUnitCreationYearError: 'Please enter a valid date',
      validationUnitCreationYearRequired: 'Date required',
      validationShortDescriptionRequired: 'Description required',
      validationUnitPriceError: 'Number is not valid',
      validationUnitPriceRequired: 'Unit price required',
      validationCurrencyRequired: 'Currency required',
      validationUnitTypeRequired: 'UnitType required',
      validationAuditUnitRequired: 'AuditUnit required',
      validationSustainableDevelopmentGoalIdsError: 'Goals required',
      validationSustainableDevelopmentGoalIdsRequired: 'Goals required',
      validationProjectNameRequired: 'Project name required',
      validationDescriptionRequired: 'Description required',
      validationAddressRequired: 'Address required',
      validationCountryRequired: 'Country required',
      validationProjectStandardRequired: 'Project standard required',
      validationStartDateError: 'Please enter a valid date',
      validationStartDateRequired: 'Date required',
      validationExpectedEndDateBeforeStartDateError: 'End date cant be before start date',
      validationExpectedEndDateError: 'Please enter a valid date',
      validationExpectedEndDateRequired: 'Date required',
      validationUnitGenerationDateRequired: 'Date required',
      validationUnitGenerationDateError: 'Please enter a valid date',
      validationUnitGenerationTimeRequired: 'Unit generation time required',
      validationCircularityRequired: 'Circularity required',
    },
  },
  filter: {
    save: 'Save',
    reset: 'Reset',
    projectStandardLabel: 'Project standard',
    projectStandardPlaceholder: 'Select project standard',
    auditUnitLabel: 'Audit units',
    auditUnitPlaceholder: 'Select audit unit',
    unitTypeLabel: 'Unit types',
    unitTypePlaceholder: 'Select unit types',
    countryLabel: 'Countries',
    countryPlaceholder: 'Select country',
    status: 'Status',
    statusPlaceholder: 'Select status',
    sustainableDevelopmentGoalsLabel: 'Sustainable development goals',
    sustainableDevelopmentGoalsPlaceholder: 'Select sustainable development goals',
    currenciesLabel: 'Currencies',
    currenciesPlaceholder: 'Select currencies',
    currency: 'Currency',
    unitGenerationTime: 'Unit generation time',
    projectStart: 'Project start',
    projectEnd: 'Project end',
    sustainableDevelopmentGoals: 'Sustainable Development Goals',
    circularity: 'Circularity',
    any: 'Any',
  },
  calendar: {
    unitGenerationDateLabel: 'Unit generation date',
    projectDateLabel: 'Project date',
    unitCreationYearLabel: 'Unit creation year',
    from: 'From',
    to: 'to',
  },
  input: {
    projectCircularity: 'Circularity',
    unitCountMin: 'Min unit',
    unitCountMax: 'Max unit',
    unitPriceMin: 'Min price',
    unitPriceMax: 'Max price',
    min: 'Min',
    max: 'Max',
  },
  text: {
    showMore: 'Show more',
  },
  checkbox: {
    developerOffersLabel: 'Developer offers',
    otherOffersLabel: 'Other offers',
    allLabel: 'All',
  },
  keyword: {
    search: 'Keyword search',
  },
  common: {
    search: 'Search',
    logout: 'Logout',
  },
  modal: {
    passwordChangeModalTitle: 'Password change',
    passwordChangeModalContent: 'We sent you an email resetting your password',
  },
  resetPassword: {
    mainTitle: 'Enter your email to reset password',
  },
  access: {
    title: 'ACCESS',
    denied: ' DENIED',
    permissions: 'You do not have the necessary permissions.',
    goBack: 'Go back',
    isActive: 'Is active',
  },
  moderator: {
    updatedTitle: 'Moderator updated',
    updatedContent: 'Moderator {{firstName}} {{lastName}} was updated',
    createdTitle: 'Moderator created',
    createdContent: 'Moderator {{firstName}} {{lastName}} was created',
    moderatorList: 'Moderator List',
  },
  page: {
    buyerOrSeller: 'buyer or seller page',
  },
  sideMenu: {
    homeLabel: 'Home',
    logsLabel: 'Logs',
    transactionsLogsLabel: 'Transactions Logs',
    offersLabel: 'Offers',
    manageOffersLabel: 'Manage Offers',
    myOffersLabel: 'My offers',
    createOfferLabel: 'Create offer',
    investorWalletLabel: 'Investor wallet',
    paymentsLabel: 'Payments',
    consentsLabel: 'Consents',
    transactions: 'Transactions',
  },
  tooltip: {
    clipboardCopied: 'Copied to clipboard',
  },
  notFound: {
    pageNotFound: 'PAGE NOT FOUND',
    resourceNotAvailable: 'Requested resource is not available.',
    goBack: 'Go back',
  },
  offer: {
    offerAddedModalTitle:
      'Your offer has been added and is in the verification process by a Carbon employee.',
    offerAddedModalContent:
      'A Carbon employee will contact you by email to send you a list of necessary documents.',
    updatedVerificationModalTitle:
      'Your offer has been updated and has to be verify by a Carbon employee.',
    updatedVerificationModalContent:
      'A Carbon employee will contact you by email to send you a list of necessary documents.',
  },
  project: {
    edit: {
      projectVerificationModalTitle:
        'Your project has been updated and has to be verified by a Carbon employee.',
      projectVerificationModalContent:
        'A Carbon employee will contact you by email to send you a list of necessary documents.',
    },
    offsetInfo: {
      name: 'Offset info',
    },
    details: 'Project details',
    sdgGoals: 'SDG Goals',
    standard: 'Project standard',
    standards: 'Standards',
    circularity: 'Circularity',
    dates: 'Dates',
    startDate: 'Project start date',
    expectedEndDate: 'Expected end date',
    unitGeneration: 'Unit generation',
  },
  offsetLogs: {
    actions: {
      BUY: 'Buy',
      SELL: 'Sell',
      RETIRE: 'Retire',
    },
  },
  transactions: 'Transactions',
  transactionExecutionDate: 'Transaction execution date',
  generalInformation: 'General information',
  unitPrice: 'Unit price',
  unitCount: 'Unit count',
  action: 'Action',
  actionDescription: 'Action description',
  unitType: 'Unit type',
  auditUnit: 'Unit audit',
  unknownAction: 'Unknown action',
  boughtBy: 'Bought by',
  soldBy: 'Sold by',
  retiredBy: 'Retired by',
  allUnits: 'All units',
  soldUnits: 'Sold units',
  soldAndNotRetiredUnits: 'Sold and not retired units',
  retiredUnits: 'Retired units',
  notSoldUnits: 'Not sold units',
  marketplace: 'Marketplace',
  loading: 'Loading...',
  settings: 'Settings',
  apiErrors: {
    EMAIL_TAKEN: 'Email is already taken',
    NAME_MUST_BE_UNIQUE: 'Name must be unique',
    EMAIL_NOT_FOUND: 'Email not found',
    FIELD_NOT_EMPTY: 'Field cannot be empty',
    ARRAY_NOT_EMPTY: 'List cannot be empty',
    INVALID_LENGTH: 'Invalid length',
    INVALID_FORMAT: 'Invalid format',
    STRING_TOO_LONG: 'Text is too long',
    NUMBER_TOO_LARGE: 'Number is too large',
    FILE_TOO_LARGE: 'File is too large',
    FILE_TYPE_NOT_SUPPORTED: 'File type is not supported',
    ACCOUNT_DISABLED: 'Account is disabled',
    INVALID_CREDENTIALS: 'Invalid credentials',
    RESOURCE_FORBIDDEN: 'Resource forbidden',
    NOT_ENOUGH_UNITS_AVAILABLE: 'Not enough units available',
    CANNOT_UPDATE_SOLD_OUT_OFFSET: 'Cannot update sold out offset',
  },
  status: 'Status',
  acceptTransaction: 'Accept transaction',
  acceptTransactionConfirmation: 'Are you sure you want to accept transaction?',
  acceptTransactionSuccessMessage: 'The transaction has been accepted',
  rejectTransaction: 'Reject transaction',
  rejectTransactionConfirmation: 'Are you sure you want to reject transaction?',
  rejectTransactionSuccessMessage: 'The transaction has been rejected',
  ACCEPTED: 'Accepted',
  REJECTED: 'Rejected',
  PENDING: 'Pending',
};
