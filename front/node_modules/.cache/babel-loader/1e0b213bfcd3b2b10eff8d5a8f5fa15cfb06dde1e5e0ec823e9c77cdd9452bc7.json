{"ast":null,"code":"import{ApiResponse}from'@custom-types/api-types';import{createUnsuccessfulApiResponse}from'@services/error-service';import{axiosPublic}from'./api';export const register=async payload=>{try{const signInResponse=await axiosPublic.post('/users/customers/sign-up',payload);return new ApiResponse({data:signInResponse.data});}catch(error){return createUnsuccessfulApiResponse(error);}};","map":{"version":3,"names":["ApiResponse","createUnsuccessfulApiResponse","axiosPublic","register","payload","signInResponse","post","data","error"],"sources":["/Users/st/Documents/carbon/front/src/api/register-api.ts"],"sourcesContent":["import { RegisterProps } from '@custom-types/register-types';\n\nimport { ApiResponse } from '@custom-types/api-types';\nimport { UserResponse } from '@custom-types/user-types';\nimport { createUnsuccessfulApiResponse } from '@services/error-service';\nimport { axiosPublic } from './api';\n\nexport const register = async (payload: RegisterProps): Promise<ApiResponse<UserResponse>> => {\n  try {\n    const signInResponse = await axiosPublic.post('/users/customers/sign-up', payload);\n    return new ApiResponse<UserResponse>({ data: signInResponse.data });\n  } catch (error) {\n    return createUnsuccessfulApiResponse(error);\n  }\n};\n"],"mappings":"AAEA,OAASA,WAAW,KAAQ,yBAAyB,CAErD,OAASC,6BAA6B,KAAQ,yBAAyB,CACvE,OAASC,WAAW,KAAQ,OAAO,CAEnC,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,OAAsB,EAAyC,CAC5F,GAAI,CACF,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAH,WAAW,CAACI,IAAI,CAAC,0BAA0B,CAAEF,OAAO,CAAC,CAClF,MAAO,IAAI,CAAAJ,WAAW,CAAe,CAAEO,IAAI,CAAEF,cAAc,CAACE,IAAK,CAAC,CAAC,CACrE,CAAE,MAAOC,KAAK,CAAE,CACd,MAAO,CAAAP,6BAA6B,CAACO,KAAK,CAAC,CAC7C,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}