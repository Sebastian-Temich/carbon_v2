{"ast":null,"code":"import{makeAutoObservable}from'mobx';import{makePersistable}from'mobx-persist-store';import{getUser}from'@api/user-api';import{ROLES}from'@utils/roles';class UserStore{constructor(){this.user=undefined;this.setUser=user=>{this.user=user;};makeAutoObservable(this);makePersistable(this,{name:'currentUser',properties:['user'],storage:window.localStorage});}async getUserData(){const user=await getUser();if(!user)return;this.setUser(user);}hasUserRole(roleName){var _this$user,_this$user$roles;return!!((_this$user=this.user)!==null&&_this$user!==void 0&&(_this$user$roles=_this$user.roles)!==null&&_this$user$roles!==void 0&&_this$user$roles.find(role=>role.name===roleName));}get rolesInfo(){const customer=this.hasUserRole(ROLES.CUSTOMER);const moderator=this.hasUserRole(ROLES.MODERATOR);const admin=this.hasUserRole(ROLES.ADMIN);return{customer,moderator,admin};}}const userStore=new UserStore();export default userStore;","map":{"version":3,"names":["makeAutoObservable","makePersistable","getUser","ROLES","UserStore","constructor","user","undefined","setUser","name","properties","storage","window","localStorage","getUserData","hasUserRole","roleName","_this$user","_this$user$roles","roles","find","role","rolesInfo","customer","CUSTOMER","moderator","MODERATOR","admin","ADMIN","userStore"],"sources":["/Users/st/Documents/carbon/front/src/store/user-store.ts"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport { makePersistable } from 'mobx-persist-store';\n\nimport { getUser } from '@api/user-api';\nimport { IUser } from '@custom-types/user-types';\nimport { ROLES } from '@utils/roles';\n\nclass UserStore {\n  constructor() {\n    makeAutoObservable(this);\n    makePersistable(this, {\n      name: 'currentUser',\n      properties: ['user'],\n      storage: window.localStorage,\n    });\n  }\n\n  user: IUser | undefined = undefined;\n\n  async getUserData() {\n    const user = await getUser();\n\n    if (!user) return;\n\n    this.setUser(user);\n  }\n\n  setUser = (user: IUser | undefined) => {\n    this.user = user;\n  };\n\n  hasUserRole(roleName: string) {\n    return !!this.user?.roles?.find((role) => role.name === roleName);\n  }\n\n  get rolesInfo() {\n    const customer = this.hasUserRole(ROLES.CUSTOMER);\n    const moderator = this.hasUserRole(ROLES.MODERATOR);\n    const admin = this.hasUserRole(ROLES.ADMIN);\n\n    return {\n      customer,\n      moderator,\n      admin,\n    };\n  }\n}\n\nconst userStore = new UserStore();\nexport default userStore;\n"],"mappings":"AAAA,OAASA,kBAAkB,KAAQ,MAAM,CACzC,OAASC,eAAe,KAAQ,oBAAoB,CAEpD,OAASC,OAAO,KAAQ,eAAe,CAEvC,OAASC,KAAK,KAAQ,cAAc,CAEpC,KAAM,CAAAC,SAAU,CACdC,WAAWA,CAAA,CAAG,MASdC,IAAI,CAAsBC,SAAS,MAUnCC,OAAO,CAAIF,IAAuB,EAAK,CACrC,IAAI,CAACA,IAAI,CAAGA,IAAI,CAClB,CAAC,CApBCN,kBAAkB,CAAC,IAAI,CAAC,CACxBC,eAAe,CAAC,IAAI,CAAE,CACpBQ,IAAI,CAAE,aAAa,CACnBC,UAAU,CAAE,CAAC,MAAM,CAAC,CACpBC,OAAO,CAAEC,MAAM,CAACC,YAClB,CAAC,CAAC,CACJ,CAIA,KAAM,CAAAC,WAAWA,CAAA,CAAG,CAClB,KAAM,CAAAR,IAAI,CAAG,KAAM,CAAAJ,OAAO,CAAC,CAAC,CAE5B,GAAI,CAACI,IAAI,CAAE,OAEX,IAAI,CAACE,OAAO,CAACF,IAAI,CAAC,CACpB,CAMAS,WAAWA,CAACC,QAAgB,CAAE,KAAAC,UAAA,CAAAC,gBAAA,CAC5B,MAAO,CAAC,GAAAD,UAAA,CAAC,IAAI,CAACX,IAAI,UAAAW,UAAA,YAAAC,gBAAA,CAATD,UAAA,CAAWE,KAAK,UAAAD,gBAAA,WAAhBA,gBAAA,CAAkBE,IAAI,CAAEC,IAAI,EAAKA,IAAI,CAACZ,IAAI,GAAKO,QAAQ,CAAC,EACnE,CAEA,GAAI,CAAAM,SAASA,CAAA,CAAG,CACd,KAAM,CAAAC,QAAQ,CAAG,IAAI,CAACR,WAAW,CAACZ,KAAK,CAACqB,QAAQ,CAAC,CACjD,KAAM,CAAAC,SAAS,CAAG,IAAI,CAACV,WAAW,CAACZ,KAAK,CAACuB,SAAS,CAAC,CACnD,KAAM,CAAAC,KAAK,CAAG,IAAI,CAACZ,WAAW,CAACZ,KAAK,CAACyB,KAAK,CAAC,CAE3C,MAAO,CACLL,QAAQ,CACRE,SAAS,CACTE,KACF,CAAC,CACH,CACF,CAEA,KAAM,CAAAE,SAAS,CAAG,GAAI,CAAAzB,SAAS,CAAC,CAAC,CACjC,cAAe,CAAAyB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}