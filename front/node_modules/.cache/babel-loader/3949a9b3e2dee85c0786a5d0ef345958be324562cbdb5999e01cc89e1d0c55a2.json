{"ast":null,"code":"var P = Object.defineProperty,\n  R = Object.defineProperties;\nvar C = Object.getOwnPropertyDescriptors;\nvar m = Object.getOwnPropertySymbols;\nvar v = Object.prototype.hasOwnProperty,\n  x = Object.prototype.propertyIsEnumerable;\nvar b = (e, s, t) => s in e ? P(e, s, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: t\n  }) : e[s] = t,\n  h = (e, s) => {\n    for (var t in s || (s = {})) v.call(s, t) && b(e, t, s[t]);\n    if (m) for (var t of m(s)) x.call(s, t) && b(e, t, s[t]);\n    return e;\n  },\n  p = (e, s) => R(e, C(s));\nvar g = (e, s) => {\n  var t = {};\n  for (var r in e) v.call(e, r) && s.indexOf(r) < 0 && (t[r] = e[r]);\n  if (e != null && m) for (var r of m(e)) s.indexOf(r) < 0 && x.call(e, r) && (t[r] = e[r]);\n  return t;\n};\nimport * as l from \"react\";\nimport * as f from \"react\";\nimport { decode as y } from \"blurhash\";\nvar o = class extends f.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.canvas = null;\n    this.handleRef = t => {\n      this.canvas = t, this.draw();\n    };\n    this.draw = () => {\n      let {\n        hash: t,\n        height: r,\n        punch: n,\n        width: a\n      } = this.props;\n      if (this.canvas) {\n        let i = y(t, a, r, n),\n          c = this.canvas.getContext(\"2d\"),\n          d = c.createImageData(a, r);\n        d.data.set(i), c.putImageData(d, 0, 0);\n      }\n    };\n  }\n  componentDidUpdate() {\n    this.draw();\n  }\n  render() {\n    let i = this.props,\n      {\n        hash: t,\n        height: r,\n        width: n\n      } = i,\n      a = g(i, [\"hash\", \"height\", \"width\"]);\n    return f.createElement(\"canvas\", p(h({}, a), {\n      height: r,\n      width: n,\n      ref: this.handleRef\n    }));\n  }\n};\no.defaultProps = {\n  height: 128,\n  width: 128\n};\nvar D = {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: \"100%\",\n    height: \"100%\"\n  },\n  u = class extends l.PureComponent {\n    componentDidUpdate() {\n      if (this.props.resolutionX <= 0) throw new Error(\"resolutionX must be larger than zero\");\n      if (this.props.resolutionY <= 0) throw new Error(\"resolutionY must be larger than zero\");\n    }\n    render() {\n      let w = this.props,\n        {\n          hash: s,\n          height: t,\n          width: r,\n          punch: n,\n          resolutionX: a,\n          resolutionY: i,\n          style: c\n        } = w,\n        d = g(w, [\"hash\", \"height\", \"width\", \"punch\", \"resolutionX\", \"resolutionY\", \"style\"]);\n      return l.createElement(\"div\", p(h({}, d), {\n        style: p(h({\n          display: \"inline-block\",\n          height: t,\n          width: r\n        }, c), {\n          position: \"relative\"\n        })\n      }), l.createElement(o, {\n        hash: s,\n        height: i,\n        width: a,\n        punch: n,\n        style: D\n      }));\n    }\n  };\nu.defaultProps = {\n  height: 128,\n  width: 128,\n  resolutionX: 32,\n  resolutionY: 32\n};\nexport { u as Blurhash, o as BlurhashCanvas };","map":{"version":3,"names":["l","f","decode","y","o","PureComponent","constructor","arguments","canvas","handleRef","t","draw","hash","height","r","punch","n","width","a","props","i","c","getContext","d","createImageData","data","set","putImageData","componentDidUpdate","render","g","createElement","p","h","ref","defaultProps","D","position","top","bottom","left","right","u","resolutionX","Error","resolutionY","w","s","style","display","Blurhash","BlurhashCanvas"],"sources":["/Users/st/Documents/carbon/front/node_modules/react-blurhash/src/Blurhash.tsx","/Users/st/Documents/carbon/front/node_modules/react-blurhash/src/BlurhashCanvas.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport BlurhashCanvas from './BlurhashCanvas';\n\ntype Props = React.HTMLAttributes<HTMLDivElement> & {\n  hash: string;\n  /** CSS height, default: 128 */\n  height?: number | string | 'auto';\n  punch?: number;\n  resolutionX?: number;\n  resolutionY?: number;\n  style?: React.CSSProperties;\n  /** CSS width, default: 128 */\n  width?: number | string | 'auto';\n};\n\nconst canvasStyle: React.CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  width: '100%',\n  height: '100%',\n};\n\nexport default class Blurhash extends React.PureComponent<Props> {\n  static defaultProps = {\n    height: 128,\n    width: 128,\n    resolutionX: 32,\n    resolutionY: 32,\n  };\n\n  componentDidUpdate() {\n    if (this.props.resolutionX <= 0) {\n      throw new Error('resolutionX must be larger than zero');\n    }\n\n    if (this.props.resolutionY <= 0) {\n      throw new Error('resolutionY must be larger than zero');\n    }\n  }\n\n  render() {\n    const { hash, height, width, punch, resolutionX, resolutionY, style, ...rest } = this.props;\n\n    return (\n      <div\n        {...rest}\n        style={{ display: 'inline-block', height, width, ...style, position: 'relative' }}\n      >\n        <BlurhashCanvas\n          hash={hash}\n          height={resolutionY}\n          width={resolutionX}\n          punch={punch}\n          style={canvasStyle}\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { decode } from 'blurhash';\n\nexport type Props = React.CanvasHTMLAttributes<HTMLCanvasElement> & {\n  hash: string;\n  height?: number;\n  punch?: number;\n  width?: number;\n};\n\nexport default class BlurhashCanvas extends React.PureComponent<Props> {\n  static defaultProps = {\n    height: 128,\n    width: 128,\n  };\n\n  canvas: HTMLCanvasElement = null;\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  handleRef = (canvas: HTMLCanvasElement) => {\n    this.canvas = canvas;\n    this.draw();\n  };\n\n  draw = () => {\n    const { hash, height, punch, width } = this.props;\n\n    if (this.canvas) {\n      const pixels = decode(hash, width, height, punch);\n\n      const ctx = this.canvas.getContext('2d');\n      const imageData = ctx.createImageData(width, height);\n      imageData.data.set(pixels);\n      ctx.putImageData(imageData, 0, 0);\n    }\n  };\n\n  render() {\n    const { hash, height, width, ...rest } = this.props;\n\n    return <canvas {...rest} height={height} width={width} ref={this.handleRef} />;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}