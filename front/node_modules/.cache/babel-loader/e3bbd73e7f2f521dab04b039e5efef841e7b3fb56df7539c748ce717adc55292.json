{"ast":null,"code":"import{AxiosError}from'axios';import{ApiResponse}from'@custom-types/api-types';import i18n from'@i18n/i18';export const createUnsuccessfulApiResponse=error=>{var _error$response;const isValidationError=error instanceof AxiosError&&((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===422;if(isValidationError){const validationErrors=error.response.data;return new ApiResponse({validationErrors:toFormikErrors(validationErrors)});}return new ApiResponse({otherErrors:true});};const toFormikErrors=errors=>{return errors.reduce((acc,error)=>{const{loc,msg,type}=error;const locWithoutRoot=loc.filter(l=>l!=='__root__');const field=locWithoutRoot.join('.');if(type.startsWith('value_error')){acc[field]=translateError(msg);}return acc;},{});};const translateError=error=>{const translation=i18n.t(\"apiErrors.\".concat(error));if(translation!==\"apiErrors.\".concat(error))return translation;return error;};","map":{"version":3,"names":["AxiosError","ApiResponse","i18n","createUnsuccessfulApiResponse","error","_error$response","isValidationError","response","status","validationErrors","data","toFormikErrors","otherErrors","errors","reduce","acc","loc","msg","type","locWithoutRoot","filter","l","field","join","startsWith","translateError","translation","t","concat"],"sources":["/Users/st/Documents/carbon/front/src/services/error-service.ts"],"sourcesContent":["import { IFormikErrors } from '@custom-types/form-types';\nimport { AxiosError } from 'axios';\nimport { ApiResponse, IValidationError } from '@custom-types/api-types';\nimport i18n from '@i18n/i18';\n\nexport const createUnsuccessfulApiResponse = <T>(error: any): ApiResponse<T> => {\n  const isValidationError = error instanceof AxiosError && error.response?.status === 422;\n\n  if (isValidationError) {\n    const validationErrors = error.response!.data;\n    return new ApiResponse<T>({ validationErrors: toFormikErrors(validationErrors) });\n  }\n  return new ApiResponse<T>({ otherErrors: true });\n};\n\nconst toFormikErrors = (errors: IValidationError[]): IFormikErrors => {\n  return errors.reduce((acc: IFormikErrors, error) => {\n    const { loc, msg, type } = error;\n    const locWithoutRoot = loc.filter((l) => l !== '__root__');\n    const field = locWithoutRoot.join('.');\n    if (type.startsWith('value_error')) {\n      acc[field] = translateError(msg);\n    }\n\n    return acc;\n  }, {});\n};\n\nconst translateError = (error: string) => {\n  const translation = i18n.t(`apiErrors.${error}`);\n  if (translation !== `apiErrors.${error}`) return translation;\n  return error;\n};\n"],"mappings":"AACA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,WAAW,KAA0B,yBAAyB,CACvE,MAAO,CAAAC,IAAI,KAAM,WAAW,CAE5B,MAAO,MAAM,CAAAC,6BAA6B,CAAOC,KAAU,EAAqB,KAAAC,eAAA,CAC9E,KAAM,CAAAC,iBAAiB,CAAGF,KAAK,WAAY,CAAAJ,UAAU,EAAI,EAAAK,eAAA,CAAAD,KAAK,CAACG,QAAQ,UAAAF,eAAA,iBAAdA,eAAA,CAAgBG,MAAM,IAAK,GAAG,CAEvF,GAAIF,iBAAiB,CAAE,CACrB,KAAM,CAAAG,gBAAgB,CAAGL,KAAK,CAACG,QAAQ,CAAEG,IAAI,CAC7C,MAAO,IAAI,CAAAT,WAAW,CAAI,CAAEQ,gBAAgB,CAAEE,cAAc,CAACF,gBAAgB,CAAE,CAAC,CAAC,CACnF,CACA,MAAO,IAAI,CAAAR,WAAW,CAAI,CAAEW,WAAW,CAAE,IAAK,CAAC,CAAC,CAClD,CAAC,CAED,KAAM,CAAAD,cAAc,CAAIE,MAA0B,EAAoB,CACpE,MAAO,CAAAA,MAAM,CAACC,MAAM,CAAC,CAACC,GAAkB,CAAEX,KAAK,GAAK,CAClD,KAAM,CAAEY,GAAG,CAAEC,GAAG,CAAEC,IAAK,CAAC,CAAGd,KAAK,CAChC,KAAM,CAAAe,cAAc,CAAGH,GAAG,CAACI,MAAM,CAAEC,CAAC,EAAKA,CAAC,GAAK,UAAU,CAAC,CAC1D,KAAM,CAAAC,KAAK,CAAGH,cAAc,CAACI,IAAI,CAAC,GAAG,CAAC,CACtC,GAAIL,IAAI,CAACM,UAAU,CAAC,aAAa,CAAC,CAAE,CAClCT,GAAG,CAACO,KAAK,CAAC,CAAGG,cAAc,CAACR,GAAG,CAAC,CAClC,CAEA,MAAO,CAAAF,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CACR,CAAC,CAED,KAAM,CAAAU,cAAc,CAAIrB,KAAa,EAAK,CACxC,KAAM,CAAAsB,WAAW,CAAGxB,IAAI,CAACyB,CAAC,cAAAC,MAAA,CAAcxB,KAAK,CAAE,CAAC,CAChD,GAAIsB,WAAW,gBAAAE,MAAA,CAAkBxB,KAAK,CAAE,CAAE,MAAO,CAAAsB,WAAW,CAC5D,MAAO,CAAAtB,KAAK,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}