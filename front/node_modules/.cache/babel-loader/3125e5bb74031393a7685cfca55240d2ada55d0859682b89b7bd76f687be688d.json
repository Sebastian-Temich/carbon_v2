{"ast":null,"code":"import*as Yup from'yup';import{identityCardNumberRegExp,krsRegExp,nipRegExp,phoneRegExp,regonRegExp}from'@variables/validation-regex';export const ValidationRegisterSchema=()=>{return Yup.object().shape({company:Yup.object().shape({address:Yup.object({street:Yup.string().required('yup.register.company.address.streetRequiredErrorMessage'),city:Yup.string().required('yup.register.company.address.cityRequiredErrorMessage'),postalCode:Yup.string().required('yup.register.company.address.postalCodeRequiredErrorMessage')}),NIP:Yup.string().matches(nipRegExp,'yup.register.company.nipInvalidErrorMessage').required('yup.register.company.nipRequiredErrorMessage'),KRS:Yup.string().matches(krsRegExp,'yup.register.company.krsInvalidErrorMessage').required('yup.register.company.krsRequiredErrorMessage'),REGON:Yup.string().matches(regonRegExp,'yup.register.company.regonInvalidErrorMessage').required('yup.register.company.regonRequiredErrorMessage'),representatives:Yup.array().of(Yup.string().required('yup.register.company.representativeRequiredErrorMessage')).required('yup.register.company.representativesRequiredErrorMessage'),name:Yup.string().required('yup.register.company.nameRequiredErrorMessage')}),email:Yup.string().email('yup.register.emailInvalidErrorMessage').required('yup.register.emailRequiredErrorMessage'),firstName:Yup.string().required('yup.register.firstNameRequiredErrorMessage'),lastName:Yup.string().required('yup.register.lastNameRequiredErrorMessage'),accept:Yup.boolean().oneOf([true],'yup.register.acceptInvalidErrorMessage').required('yup.register.acceptRequiredErrorMessage'),phoneNumber:Yup.string().matches(phoneRegExp,'yup.register.phoneNumberInvalidErrorMessage').required('yup.register.phoneNumberRequiredErrorMessage'),identityCardNumber:Yup.string().matches(identityCardNumberRegExp,'yup.register.identityCardNumberInvalidErrorMessage').required('yup.register.identityCardNumberRequiredErrorMessage')});};","map":{"version":3,"names":["Yup","identityCardNumberRegExp","krsRegExp","nipRegExp","phoneRegExp","regonRegExp","ValidationRegisterSchema","object","shape","company","address","street","string","required","city","postalCode","NIP","matches","KRS","REGON","representatives","array","of","name","email","firstName","lastName","accept","boolean","oneOf","phoneNumber","identityCardNumber"],"sources":["/Users/st/Documents/carbon/front/src/screens/register/validation-register-schema.tsx"],"sourcesContent":["import * as Yup from 'yup';\n\nimport {\n  identityCardNumberRegExp,\n  krsRegExp,\n  nipRegExp,\n  phoneRegExp,\n  regonRegExp,\n} from '@variables/validation-regex';\n\nexport const ValidationRegisterSchema = () => {\n  return Yup.object().shape({\n    company: Yup.object().shape({\n      address: Yup.object({\n        street: Yup.string().required('yup.register.company.address.streetRequiredErrorMessage'),\n        city: Yup.string().required('yup.register.company.address.cityRequiredErrorMessage'),\n        postalCode: Yup.string().required(\n          'yup.register.company.address.postalCodeRequiredErrorMessage',\n        ),\n      }),\n      NIP: Yup.string()\n        .matches(nipRegExp, 'yup.register.company.nipInvalidErrorMessage')\n        .required('yup.register.company.nipRequiredErrorMessage'),\n      KRS: Yup.string()\n        .matches(krsRegExp, 'yup.register.company.krsInvalidErrorMessage')\n        .required('yup.register.company.krsRequiredErrorMessage'),\n      REGON: Yup.string()\n        .matches(regonRegExp, 'yup.register.company.regonInvalidErrorMessage')\n        .required('yup.register.company.regonRequiredErrorMessage'),\n      representatives: Yup.array()\n        .of(Yup.string().required('yup.register.company.representativeRequiredErrorMessage'))\n        .required('yup.register.company.representativesRequiredErrorMessage'),\n      name: Yup.string().required('yup.register.company.nameRequiredErrorMessage'),\n    }),\n    email: Yup.string()\n      .email('yup.register.emailInvalidErrorMessage')\n      .required('yup.register.emailRequiredErrorMessage'),\n    firstName: Yup.string().required('yup.register.firstNameRequiredErrorMessage'),\n    lastName: Yup.string().required('yup.register.lastNameRequiredErrorMessage'),\n    accept: Yup.boolean()\n      .oneOf([true], 'yup.register.acceptInvalidErrorMessage')\n      .required('yup.register.acceptRequiredErrorMessage'),\n    phoneNumber: Yup.string()\n      .matches(phoneRegExp, 'yup.register.phoneNumberInvalidErrorMessage')\n      .required('yup.register.phoneNumberRequiredErrorMessage'),\n    identityCardNumber: Yup.string()\n      .matches(identityCardNumberRegExp, 'yup.register.identityCardNumberInvalidErrorMessage')\n      .required('yup.register.identityCardNumberRequiredErrorMessage'),\n  });\n};\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,GAAG,KAAM,KAAK,CAE1B,OACEC,wBAAwB,CACxBC,SAAS,CACTC,SAAS,CACTC,WAAW,CACXC,WAAW,KACN,6BAA6B,CAEpC,MAAO,MAAM,CAAAC,wBAAwB,CAAGA,CAAA,GAAM,CAC5C,MAAO,CAAAN,GAAG,CAACO,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC,CACxBC,OAAO,CAAET,GAAG,CAACO,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC,CAC1BE,OAAO,CAAEV,GAAG,CAACO,MAAM,CAAC,CAClBI,MAAM,CAAEX,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,yDAAyD,CAAC,CACxFC,IAAI,CAAEd,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,uDAAuD,CAAC,CACpFE,UAAU,CAAEf,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAC/B,6DACF,CACF,CAAC,CAAC,CACFG,GAAG,CAAEhB,GAAG,CAACY,MAAM,CAAC,CAAC,CACdK,OAAO,CAACd,SAAS,CAAE,6CAA6C,CAAC,CACjEU,QAAQ,CAAC,8CAA8C,CAAC,CAC3DK,GAAG,CAAElB,GAAG,CAACY,MAAM,CAAC,CAAC,CACdK,OAAO,CAACf,SAAS,CAAE,6CAA6C,CAAC,CACjEW,QAAQ,CAAC,8CAA8C,CAAC,CAC3DM,KAAK,CAAEnB,GAAG,CAACY,MAAM,CAAC,CAAC,CAChBK,OAAO,CAACZ,WAAW,CAAE,+CAA+C,CAAC,CACrEQ,QAAQ,CAAC,gDAAgD,CAAC,CAC7DO,eAAe,CAAEpB,GAAG,CAACqB,KAAK,CAAC,CAAC,CACzBC,EAAE,CAACtB,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,yDAAyD,CAAC,CAAC,CACpFA,QAAQ,CAAC,0DAA0D,CAAC,CACvEU,IAAI,CAAEvB,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,+CAA+C,CAC7E,CAAC,CAAC,CACFW,KAAK,CAAExB,GAAG,CAACY,MAAM,CAAC,CAAC,CAChBY,KAAK,CAAC,uCAAuC,CAAC,CAC9CX,QAAQ,CAAC,wCAAwC,CAAC,CACrDY,SAAS,CAAEzB,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,4CAA4C,CAAC,CAC9Ea,QAAQ,CAAE1B,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,2CAA2C,CAAC,CAC5Ec,MAAM,CAAE3B,GAAG,CAAC4B,OAAO,CAAC,CAAC,CAClBC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAE,wCAAwC,CAAC,CACvDhB,QAAQ,CAAC,yCAAyC,CAAC,CACtDiB,WAAW,CAAE9B,GAAG,CAACY,MAAM,CAAC,CAAC,CACtBK,OAAO,CAACb,WAAW,CAAE,6CAA6C,CAAC,CACnES,QAAQ,CAAC,8CAA8C,CAAC,CAC3DkB,kBAAkB,CAAE/B,GAAG,CAACY,MAAM,CAAC,CAAC,CAC7BK,OAAO,CAAChB,wBAAwB,CAAE,oDAAoD,CAAC,CACvFY,QAAQ,CAAC,qDAAqD,CACnE,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}