{"ast":null,"code":"import _objectSpread from\"/Users/st/Documents/carbon/front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import{getTransactions,updateTransaction}from'@api/transactions-api';import{TransactionStatusName}from'@custom-types/transactions-types';import{ModalTypes}from'@variables/modal-variables';import DataTableMenu from'@components/data-table/data-table-menu';export const useTransactions=_ref=>{let{page=1,perPage=10}=_ref;const[isLoading,setIsLoading]=useState(false);const[transactionsCount,setTransactionsCount]=useState(0);const[transactions,setTransactions]=useState([]);const fetchTransactions=async()=>{if(isLoading)return;setIsLoading(true);const{data:transactionsData,pagination:transactionsPagination}=await getTransactions({page,perPage});if(transactionsData){setTransactions(transactionsData);}if(transactionsPagination!==null&&transactionsPagination!==void 0&&transactionsPagination.totalCount){setTransactionsCount(transactionsPagination.totalCount);}setIsLoading(false);};useEffect(()=>{fetchTransactions();},[page,perPage]);return{transactions,transactionsCount,fetchTransactions,isLoading};};export const useTransactionsTableRowMenuBody=_ref2=>{let{rootStore,modalStore,fetchTransactions}=_ref2;const{t}=useTranslation();const{transactionsStore}=rootStore;const isDisabledMenu=transactionsStore.isLoadingTransactionStatuses;const acceptTransactionCommand=async _ref3=>{let{id}=_ref3;modalStore.push({title:t('acceptTransaction'),content:t('acceptTransactionConfirmation'),type:ModalTypes.Confirmation,onAgree:async currentModal=>{modalStore.update(_objectSpread(_objectSpread({},currentModal),{},{isLoading:true}));const acceptedTransactionStatus=transactionsStore.findTransactionStatusByName(TransactionStatusName.Accepted);const updateResult=await updateTransaction({transactionId:id,transactionStatusId:acceptedTransactionStatus===null||acceptedTransactionStatus===void 0?void 0:acceptedTransactionStatus.id});if(updateResult){await fetchTransactions();modalStore.push({title:t('acceptTransaction'),content:t('acceptTransactionSuccessMessage'),type:ModalTypes.Info});}}});};const rejectTransactionCommand=async _ref4=>{let{id}=_ref4;modalStore.push({title:t('rejectTransaction'),content:t('rejectTransactionConfirmation'),type:ModalTypes.Confirmation,onAgree:async currentModal=>{modalStore.update(_objectSpread(_objectSpread({},currentModal),{},{isLoading:true}));const rejectedTransactionStatus=transactionsStore.findTransactionStatusByName(TransactionStatusName.Rejected);const updateResult=await updateTransaction({transactionId:id,transactionStatusId:rejectedTransactionStatus===null||rejectedTransactionStatus===void 0?void 0:rejectedTransactionStatus.id});if(updateResult){await fetchTransactions();modalStore.push({title:t('rejectTransaction'),content:t('rejectTransactionSuccessMessage'),type:ModalTypes.Info});}}});};const menuBodyTemplate=row=>{const menuItems=[];if(row.status===TransactionStatusName.Pending){menuItems.push({label:t('button.acceptButtonLabel'),command:()=>acceptTransactionCommand(row)});menuItems.push({label:t('button.rejectButtonLabel'),command:()=>rejectTransactionCommand(row)});}const isEmptyMenu=menuItems.length===0;return DataTableMenu(menuItems,isDisabledMenu||isEmptyMenu);};return{menuBodyTemplate};};","map":{"version":3,"names":["useEffect","useState","useTranslation","getTransactions","updateTransaction","TransactionStatusName","ModalTypes","DataTableMenu","useTransactions","_ref","page","perPage","isLoading","setIsLoading","transactionsCount","setTransactionsCount","transactions","setTransactions","fetchTransactions","data","transactionsData","pagination","transactionsPagination","totalCount","useTransactionsTableRowMenuBody","_ref2","rootStore","modalStore","t","transactionsStore","isDisabledMenu","isLoadingTransactionStatuses","acceptTransactionCommand","_ref3","id","push","title","content","type","Confirmation","onAgree","currentModal","update","_objectSpread","acceptedTransactionStatus","findTransactionStatusByName","Accepted","updateResult","transactionId","transactionStatusId","Info","rejectTransactionCommand","_ref4","rejectedTransactionStatus","Rejected","menuBodyTemplate","row","menuItems","status","Pending","label","command","isEmptyMenu","length"],"sources":["/Users/st/Documents/carbon/front/src/hooks/transactions.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getTransactions, updateTransaction } from '@api/transactions-api';\nimport {\n  Transaction,\n  TransactionsTableValue,\n  TransactionStatusName,\n} from '@custom-types/transactions-types';\nimport { RootStore } from '@store/root-store';\nimport { ModalStore } from '@store/modal-store';\nimport { PaginationQueryParams } from '@custom-types/api-types';\nimport { ModalTypes } from '@variables/modal-variables';\nimport DataTableMenu from '@components/data-table/data-table-menu';\n\ninterface UseTransactionsArgs extends PaginationQueryParams {}\n\ninterface UseTransactionsTableRowMenuBodyArgs {\n  rootStore: RootStore;\n  modalStore: ModalStore;\n  fetchTransactions: () => Promise<void>;\n}\n\nexport const useTransactions = ({ page = 1, perPage = 10 }: UseTransactionsArgs) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [transactionsCount, setTransactionsCount] = useState(0);\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n\n  const fetchTransactions = async () => {\n    if (isLoading) return;\n\n    setIsLoading(true);\n\n    const { data: transactionsData, pagination: transactionsPagination } = await getTransactions({\n      page,\n      perPage,\n    });\n\n    if (transactionsData) {\n      setTransactions(transactionsData);\n    }\n\n    if (transactionsPagination?.totalCount) {\n      setTransactionsCount(transactionsPagination.totalCount);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTransactions();\n  }, [page, perPage]);\n\n  return { transactions, transactionsCount, fetchTransactions, isLoading };\n};\n\nexport const useTransactionsTableRowMenuBody = ({\n  rootStore,\n  modalStore,\n  fetchTransactions,\n}: UseTransactionsTableRowMenuBodyArgs) => {\n  const { t } = useTranslation();\n  const { transactionsStore } = rootStore;\n  const isDisabledMenu = transactionsStore.isLoadingTransactionStatuses;\n\n  const acceptTransactionCommand = async ({ id }: TransactionsTableValue) => {\n    modalStore.push({\n      title: t('acceptTransaction'),\n      content: t('acceptTransactionConfirmation'),\n      type: ModalTypes.Confirmation,\n      onAgree: async (currentModal) => {\n        modalStore.update({ ...currentModal, isLoading: true });\n\n        const acceptedTransactionStatus = transactionsStore.findTransactionStatusByName(\n          TransactionStatusName.Accepted,\n        );\n        const updateResult = await updateTransaction({\n          transactionId: id,\n          transactionStatusId: acceptedTransactionStatus?.id,\n        });\n\n        if (updateResult) {\n          await fetchTransactions();\n          modalStore.push({\n            title: t('acceptTransaction'),\n            content: t('acceptTransactionSuccessMessage'),\n            type: ModalTypes.Info,\n          });\n        }\n      },\n    });\n  };\n\n  const rejectTransactionCommand = async ({ id }: TransactionsTableValue) => {\n    modalStore.push({\n      title: t('rejectTransaction'),\n      content: t('rejectTransactionConfirmation'),\n      type: ModalTypes.Confirmation,\n      onAgree: async (currentModal) => {\n        modalStore.update({ ...currentModal, isLoading: true });\n\n        const rejectedTransactionStatus = transactionsStore.findTransactionStatusByName(\n          TransactionStatusName.Rejected,\n        );\n        const updateResult = await updateTransaction({\n          transactionId: id,\n          transactionStatusId: rejectedTransactionStatus?.id,\n        });\n\n        if (updateResult) {\n          await fetchTransactions();\n          modalStore.push({\n            title: t('rejectTransaction'),\n            content: t('rejectTransactionSuccessMessage'),\n            type: ModalTypes.Info,\n          });\n        }\n      },\n    });\n  };\n\n  const menuBodyTemplate = (row: TransactionsTableValue) => {\n    const menuItems = [];\n\n    if (row.status === TransactionStatusName.Pending) {\n      menuItems.push({\n        label: t('button.acceptButtonLabel'),\n        command: () => acceptTransactionCommand(row),\n      });\n      menuItems.push({\n        label: t('button.rejectButtonLabel'),\n        command: () => rejectTransactionCommand(row),\n      });\n    }\n\n    const isEmptyMenu = menuItems.length === 0;\n\n    return DataTableMenu(menuItems, isDisabledMenu || isEmptyMenu);\n  };\n\n  return { menuBodyTemplate };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}