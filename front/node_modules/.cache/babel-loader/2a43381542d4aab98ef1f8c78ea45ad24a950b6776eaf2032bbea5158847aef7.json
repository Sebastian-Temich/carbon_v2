{"ast":null,"code":"import{makeAutoObservable,runInAction}from'mobx';import{makePersistable}from'mobx-persist-store';import{getCountries}from'@api/countries-api';import{getCurrencies}from'@api/currencies-api';import{getOffsetAuditUnits,getOffsetStatus,getOffsetUnitTypes}from'@api/offset-api';import{getProjectStandards}from'@api/project-standards-api';import{getSustainableDevelopmentGoals}from'@api/sustainable-development-goals-api';import userStore from'./user-store';export const DataFormInitalValue={countries:[],standards:[],auditUnits:[],devGoals:[],unitTypes:[],status:[],currencies:[]};export default class DataFormStore{constructor(rootStore){this.rootStore=void 0;this.formData=DataFormInitalValue;this._loaded=false;this.isDataFetched=false;this.fetchDataFunction=async elem=>{this._loaded=true;const fetchedData=await elem();this._loaded=false;return fetchedData.map(elemData=>({value:elemData.id,label:elemData.name||elemData.code,imageUrl:elemData.imageUri||''}));};this.fetchData=async()=>{this.isDataFetched=false;const[countries,standards,auditUnits,devGoals,unitTypes,status,currencies]=await Promise.all([this.fetchDataFunction(getCountries),this.fetchDataFunction(getProjectStandards),this.fetchDataFunction(getOffsetAuditUnits),this.fetchDataFunction(getSustainableDevelopmentGoals),this.fetchDataFunction(getOffsetUnitTypes),this.fetchDataFunction(getOffsetStatus),this.fetchDataFunction(getCurrencies)]);runInAction(()=>{this.formData={countries,standards,auditUnits,devGoals,unitTypes,status,currencies};this.isDataFetched=true;});};this.setStatus=statuses=>{if(!statuses)return[];const statusPayload=statuses.map(status=>{if(!status)return'';const asignStatus=this.formData.status.find(elem=>elem.label===status);if(!asignStatus)return'';return asignStatus.value;});this.rootStore.filterStore.filter.statusIds=statusPayload;};this.rootStore=rootStore;makeAutoObservable(this);makePersistable(this,{name:'formData',properties:['formData'],storage:window.localStorage});if(!userStore.rolesInfo.admin){this.fetchData();}}set loaded(loaded){this._loaded=loaded;}get loaded(){return this._loaded;}}","map":{"version":3,"names":["makeAutoObservable","runInAction","makePersistable","getCountries","getCurrencies","getOffsetAuditUnits","getOffsetStatus","getOffsetUnitTypes","getProjectStandards","getSustainableDevelopmentGoals","userStore","DataFormInitalValue","countries","standards","auditUnits","devGoals","unitTypes","status","currencies","DataFormStore","constructor","rootStore","formData","_loaded","isDataFetched","fetchDataFunction","elem","fetchedData","map","elemData","value","id","label","name","code","imageUrl","imageUri","fetchData","Promise","all","setStatus","statuses","statusPayload","asignStatus","find","filterStore","filter","statusIds","properties","storage","window","localStorage","rolesInfo","admin","loaded"],"sources":["/Users/st/Documents/carbon/front/src/store/data-form-store.ts"],"sourcesContent":["import _, { map } from 'lodash';\nimport { makeAutoObservable, runInAction } from 'mobx';\nimport { makePersistable } from 'mobx-persist-store';\n\nimport { getCountries } from '@api/countries-api';\nimport { getCurrencies } from '@api/currencies-api';\nimport { getOffsetAuditUnits, getOffsetStatus, getOffsetUnitTypes } from '@api/offset-api';\nimport { getProjectStandards } from '@api/project-standards-api';\nimport { getSustainableDevelopmentGoals } from '@api/sustainable-development-goals-api';\nimport { DataForm, ResponseFecthData } from '@custom-types/data-form-store';\nimport { RootStore } from './root-store';\nimport userStore from './user-store';\n\nexport const DataFormInitalValue = {\n  countries: [],\n  standards: [],\n  auditUnits: [],\n  devGoals: [],\n  unitTypes: [],\n  status: [],\n  currencies: [],\n};\n\nexport default class DataFormStore {\n  rootStore: RootStore;\n\n  formData: DataForm = DataFormInitalValue;\n\n  private _loaded = false;\n\n  isDataFetched = false;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n    makeAutoObservable(this);\n    makePersistable(this, {\n      name: 'formData',\n      properties: ['formData'],\n      storage: window.localStorage,\n    });\n    if (!userStore.rolesInfo.admin) {\n      this.fetchData();\n    }\n  }\n\n  fetchDataFunction = async (elem: () => Promise<ResponseFecthData[]>) => {\n    this._loaded = true;\n\n    const fetchedData = await elem();\n\n    this._loaded = false;\n\n    return fetchedData.map((elemData: ResponseFecthData) => ({\n      value: elemData.id,\n      label: elemData.name || elemData.code,\n      imageUrl: elemData.imageUri || '',\n    }));\n  };\n\n  fetchData = async () => {\n    this.isDataFetched = false;\n    const [countries, standards, auditUnits, devGoals, unitTypes, status, currencies] =\n      await Promise.all([\n        this.fetchDataFunction(getCountries),\n        this.fetchDataFunction(getProjectStandards),\n        this.fetchDataFunction(getOffsetAuditUnits),\n        this.fetchDataFunction(getSustainableDevelopmentGoals),\n        this.fetchDataFunction(getOffsetUnitTypes),\n        this.fetchDataFunction(getOffsetStatus),\n        this.fetchDataFunction(getCurrencies),\n      ]);\n\n    runInAction(() => {\n      this.formData = {\n        countries,\n        standards,\n        auditUnits,\n        devGoals,\n        unitTypes,\n        status,\n        currencies,\n      };\n      this.isDataFetched = true;\n    });\n  };\n\n  setStatus = (statuses: string[] | undefined) => {\n    if (!statuses) return [];\n    const statusPayload = statuses.map((status) => {\n      if (!status) return '';\n      const asignStatus = this.formData.status.find((elem) => elem.label === status);\n      if (!asignStatus) return '';\n      return asignStatus.value;\n    });\n    this.rootStore.filterStore.filter.statusIds = statusPayload;\n  };\n\n  set loaded(loaded: boolean) {\n    this._loaded = loaded;\n  }\n\n  get loaded() {\n    return this._loaded;\n  }\n}\n"],"mappings":"AACA,OAASA,kBAAkB,CAAEC,WAAW,KAAQ,MAAM,CACtD,OAASC,eAAe,KAAQ,oBAAoB,CAEpD,OAASC,YAAY,KAAQ,oBAAoB,CACjD,OAASC,aAAa,KAAQ,qBAAqB,CACnD,OAASC,mBAAmB,CAAEC,eAAe,CAAEC,kBAAkB,KAAQ,iBAAiB,CAC1F,OAASC,mBAAmB,KAAQ,4BAA4B,CAChE,OAASC,8BAA8B,KAAQ,wCAAwC,CAGvF,MAAO,CAAAC,SAAS,KAAM,cAAc,CAEpC,MAAO,MAAM,CAAAC,mBAAmB,CAAG,CACjCC,SAAS,CAAE,EAAE,CACbC,SAAS,CAAE,EAAE,CACbC,UAAU,CAAE,EAAE,CACdC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,EAAE,CACbC,MAAM,CAAE,EAAE,CACVC,UAAU,CAAE,EACd,CAAC,CAED,cAAe,MAAM,CAAAC,aAAc,CASjCC,WAAWA,CAACC,SAAoB,CAAE,MARlCA,SAAS,aAETC,QAAQ,CAAaX,mBAAmB,MAEhCY,OAAO,CAAG,KAAK,MAEvBC,aAAa,CAAG,KAAK,MAerBC,iBAAiB,CAAG,KAAO,CAAAC,IAAwC,EAAK,CACtE,IAAI,CAACH,OAAO,CAAG,IAAI,CAEnB,KAAM,CAAAI,WAAW,CAAG,KAAM,CAAAD,IAAI,CAAC,CAAC,CAEhC,IAAI,CAACH,OAAO,CAAG,KAAK,CAEpB,MAAO,CAAAI,WAAW,CAACC,GAAG,CAAEC,QAA2B,GAAM,CACvDC,KAAK,CAAED,QAAQ,CAACE,EAAE,CAClBC,KAAK,CAAEH,QAAQ,CAACI,IAAI,EAAIJ,QAAQ,CAACK,IAAI,CACrCC,QAAQ,CAAEN,QAAQ,CAACO,QAAQ,EAAI,EACjC,CAAC,CAAC,CAAC,CACL,CAAC,MAEDC,SAAS,CAAG,SAAY,CACtB,IAAI,CAACb,aAAa,CAAG,KAAK,CAC1B,KAAM,CAACZ,SAAS,CAAEC,SAAS,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,CAAEC,UAAU,CAAC,CAC/E,KAAM,CAAAoB,OAAO,CAACC,GAAG,CAAC,CAChB,IAAI,CAACd,iBAAiB,CAACtB,YAAY,CAAC,CACpC,IAAI,CAACsB,iBAAiB,CAACjB,mBAAmB,CAAC,CAC3C,IAAI,CAACiB,iBAAiB,CAACpB,mBAAmB,CAAC,CAC3C,IAAI,CAACoB,iBAAiB,CAAChB,8BAA8B,CAAC,CACtD,IAAI,CAACgB,iBAAiB,CAAClB,kBAAkB,CAAC,CAC1C,IAAI,CAACkB,iBAAiB,CAACnB,eAAe,CAAC,CACvC,IAAI,CAACmB,iBAAiB,CAACrB,aAAa,CAAC,CACtC,CAAC,CAEJH,WAAW,CAAC,IAAM,CAChB,IAAI,CAACqB,QAAQ,CAAG,CACdV,SAAS,CACTC,SAAS,CACTC,UAAU,CACVC,QAAQ,CACRC,SAAS,CACTC,MAAM,CACNC,UACF,CAAC,CACD,IAAI,CAACM,aAAa,CAAG,IAAI,CAC3B,CAAC,CAAC,CACJ,CAAC,MAEDgB,SAAS,CAAIC,QAA8B,EAAK,CAC9C,GAAI,CAACA,QAAQ,CAAE,MAAO,EAAE,CACxB,KAAM,CAAAC,aAAa,CAAGD,QAAQ,CAACb,GAAG,CAAEX,MAAM,EAAK,CAC7C,GAAI,CAACA,MAAM,CAAE,MAAO,EAAE,CACtB,KAAM,CAAA0B,WAAW,CAAG,IAAI,CAACrB,QAAQ,CAACL,MAAM,CAAC2B,IAAI,CAAElB,IAAI,EAAKA,IAAI,CAACM,KAAK,GAAKf,MAAM,CAAC,CAC9E,GAAI,CAAC0B,WAAW,CAAE,MAAO,EAAE,CAC3B,MAAO,CAAAA,WAAW,CAACb,KAAK,CAC1B,CAAC,CAAC,CACF,IAAI,CAACT,SAAS,CAACwB,WAAW,CAACC,MAAM,CAACC,SAAS,CAAGL,aAAa,CAC7D,CAAC,CA9DC,IAAI,CAACrB,SAAS,CAAGA,SAAS,CAC1BrB,kBAAkB,CAAC,IAAI,CAAC,CACxBE,eAAe,CAAC,IAAI,CAAE,CACpB+B,IAAI,CAAE,UAAU,CAChBe,UAAU,CAAE,CAAC,UAAU,CAAC,CACxBC,OAAO,CAAEC,MAAM,CAACC,YAClB,CAAC,CAAC,CACF,GAAI,CAACzC,SAAS,CAAC0C,SAAS,CAACC,KAAK,CAAE,CAC9B,IAAI,CAAChB,SAAS,CAAC,CAAC,CAClB,CACF,CAsDA,GAAI,CAAAiB,MAAMA,CAACA,MAAe,CAAE,CAC1B,IAAI,CAAC/B,OAAO,CAAG+B,MAAM,CACvB,CAEA,GAAI,CAAAA,MAAMA,CAAA,CAAG,CACX,MAAO,KAAI,CAAC/B,OAAO,CACrB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}