{"ast":null,"code":"// This is an IMG validation\nexport const MAX_IMAGE_SIZE=5*1024*1024;// 5MB in bytes\n// Converting img for preview\nexport const fileToBase64=file=>new Promise((resolve,reject)=>{const reader=new FileReader();reader.readAsDataURL(file);reader.onload=()=>resolve(reader.result);});export const saveFile=_ref=>{let{content,name,type}=_ref;const linkElement=document.createElement('a');const fileBlob=new Blob([content],{type});linkElement.href=window.URL.createObjectURL(fileBlob);linkElement.download=name;document.body.append(linkElement);linkElement.click();linkElement.remove();setTimeout(()=>URL.revokeObjectURL(linkElement.href),100);};","map":{"version":3,"names":["MAX_IMAGE_SIZE","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","saveFile","_ref","content","name","type","linkElement","document","createElement","fileBlob","Blob","href","window","URL","createObjectURL","download","body","append","click","remove","setTimeout","revokeObjectURL"],"sources":["/Users/st/Documents/carbon/front/src/services/file-service.ts"],"sourcesContent":["import { FileTypes } from '@variables/file-types-enum';\n\n// This is an IMG validation\nexport const MAX_IMAGE_SIZE = 5 * 1024 * 1024; // 5MB in bytes\n\n// Converting img for preview\nexport const fileToBase64 = (file: File) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n  });\n\ninterface SaveFileArgs {\n  content: string;\n  name: string;\n  type: FileTypes;\n}\n\nexport const saveFile = ({ content, name, type }: SaveFileArgs) => {\n  const linkElement = document.createElement('a');\n  const fileBlob = new Blob([content], { type });\n\n  linkElement.href = window.URL.createObjectURL(fileBlob);\n  linkElement.download = name;\n  document.body.append(linkElement);\n  linkElement.click();\n  linkElement.remove();\n\n  setTimeout(() => URL.revokeObjectURL(linkElement.href), 100);\n};\n"],"mappings":"AAEA;AACA,MAAO,MAAM,CAAAA,cAAc,CAAG,CAAC,CAAG,IAAI,CAAG,IAAI,CAAE;AAE/C;AACA,MAAO,MAAM,CAAAC,YAAY,CAAIC,IAAU,EACrC,GAAI,CAAAC,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CAC/B,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC/BD,MAAM,CAACE,aAAa,CAACN,IAAI,CAAC,CAC1BI,MAAM,CAACG,MAAM,CAAG,IAAML,OAAO,CAACE,MAAM,CAACI,MAAM,CAAC,CAC9C,CAAC,CAAC,CAQJ,MAAO,MAAM,CAAAC,QAAQ,CAAGC,IAAA,EAA2C,IAA1C,CAAEC,OAAO,CAAEC,IAAI,CAAEC,IAAmB,CAAC,CAAAH,IAAA,CAC5D,KAAM,CAAAI,WAAW,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CAC/C,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACP,OAAO,CAAC,CAAE,CAAEE,IAAK,CAAC,CAAC,CAE9CC,WAAW,CAACK,IAAI,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,QAAQ,CAAC,CACvDH,WAAW,CAACS,QAAQ,CAAGX,IAAI,CAC3BG,QAAQ,CAACS,IAAI,CAACC,MAAM,CAACX,WAAW,CAAC,CACjCA,WAAW,CAACY,KAAK,CAAC,CAAC,CACnBZ,WAAW,CAACa,MAAM,CAAC,CAAC,CAEpBC,UAAU,CAAC,IAAMP,GAAG,CAACQ,eAAe,CAACf,WAAW,CAACK,IAAI,CAAC,CAAE,GAAG,CAAC,CAC9D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}