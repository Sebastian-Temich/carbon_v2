{"ast":null,"code":"import{useRef,useState}from'react';import{fileToBase64,MAX_IMAGE_SIZE}from'@services/file-service';import{useTranslation}from'react-i18next';import{Button}from'primereact/button';import{ProgressSpinner}from'primereact/progressspinner';import uploadLogo from'@assets/img/img-upload.png?as=webp';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ImgUpload=_ref=>{let{setImageFile}=_ref;// This is for preview the img so we must have to have it\nconst[imgSrc,setImgSrc]=useState();const{t}=useTranslation();const[loading,setLoading]=useState(false);const[error,setError]=useState(null);// This is to clear an input value\nconst fileInputRef=useRef(null);const handleImageChange=async e=>{const target=e.target;const fileArray=target.files;if(fileArray){if(fileArray[0].size>MAX_IMAGE_SIZE){setError(t('yup.error.imageSize'));return;}setLoading(true);setError(null);const base64=await fileToBase64(fileArray[0]);const imageFiles={contentAsBase64:base64.split('base64,')[1],fileNameWithExtension:fileArray[0].name,contentType:fileArray[0].type};setImageFile(imageFiles);setImgSrc(base64);setLoading(false);}};const handleRemove=()=>{var _fileInputRef$current;setImgSrc(null);setImageFile(null);((_fileInputRef$current=fileInputRef.current)===null||_fileInputRef$current===void 0?void 0:_fileInputRef$current.value)&&(fileInputRef.current.value='');};return/*#__PURE__*/_jsxs(_Fragment,{children:[imgSrc?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(Button,{label:t('button.remove'),style:{width:'120px',float:'right'},type:\"button\",className:\"p-button-danger\",onClick:handleRemove}),/*#__PURE__*/_jsx(\"img\",{className:\"preview-img\",src:imgSrc,alt:\"Preview\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"select-img\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"select-img-pointer\",onClick:()=>fileInputRef.current&&fileInputRef.current.click(),children:[/*#__PURE__*/_jsx(\"input\",{ref:fileInputRef,type:\"file\",className:\"p-inputtext p-component\",accept:\"image/png, image/jpg, image/jpeg\",onChange:handleImageChange,hidden:true}),/*#__PURE__*/_jsx(\"img\",{className:\"w-full xl:w-6\",src:uploadLogo,alt:\"Preview\"})]})}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(ProgressSpinner,{className:\"progress-spinner\"})}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",style:{color:'red'},children:error})]});};export default ImgUpload;","map":{"version":3,"names":["useRef","useState","fileToBase64","MAX_IMAGE_SIZE","useTranslation","Button","ProgressSpinner","uploadLogo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ImgUpload","_ref","setImageFile","imgSrc","setImgSrc","t","loading","setLoading","error","setError","fileInputRef","handleImageChange","e","target","fileArray","files","size","base64","imageFiles","contentAsBase64","split","fileNameWithExtension","name","contentType","type","handleRemove","_fileInputRef$current","current","value","children","className","label","style","width","float","onClick","src","alt","click","ref","accept","onChange","hidden","color"],"sources":["/Users/st/Documents/carbon/front/src/screens/offset/img-upload/img-upload.tsx"],"sourcesContent":["import { FC, useRef, useState } from 'react';\nimport { fileToBase64, MAX_IMAGE_SIZE } from '@services/file-service';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'primereact/button';\n\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { ImgFileTypes } from '@custom-types/img-types';\nimport uploadLogo from '@assets/img/img-upload.png?as=webp';\n\nconst ImgUpload: FC<{\n  setImageFile: (imageFile: ImgFileTypes | null) => void;\n}> = ({ setImageFile }) => {\n  // This is for preview the img so we must have to have it\n  const [imgSrc, setImgSrc] = useState<string | null>();\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // This is to clear an input value\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleImageChange = async (e: any) => {\n    const target = e.target as HTMLInputElement;\n\n    const fileArray = target.files;\n    if (fileArray) {\n      if (fileArray[0].size > MAX_IMAGE_SIZE) {\n        setError(t('yup.error.imageSize'));\n        return;\n      }\n      setLoading(true);\n      setError(null);\n      const base64 = (await fileToBase64(fileArray[0])) as string;\n      const imageFiles: ImgFileTypes = {\n        contentAsBase64: base64.split('base64,')[1],\n        fileNameWithExtension: fileArray[0].name,\n        contentType: fileArray[0].type,\n      };\n      setImageFile(imageFiles);\n      setImgSrc(base64);\n      setLoading(false);\n    }\n  };\n\n  const handleRemove = () => {\n    setImgSrc(null);\n    setImageFile(null);\n    fileInputRef.current?.value && (fileInputRef.current.value = '');\n  };\n\n  return (\n    <>\n      {imgSrc ? (\n        <div className=\"text-center\">\n          <Button\n            label={t('button.remove')}\n            style={{ width: '120px', float: 'right' }}\n            type=\"button\"\n            className=\"p-button-danger\"\n            onClick={handleRemove}\n          />\n          <img className=\"preview-img\" src={imgSrc} alt=\"Preview\" />\n        </div>\n      ) : (\n        <div className=\"select-img\">\n          <span\n            className=\"select-img-pointer\"\n            onClick={() => fileInputRef.current && fileInputRef.current.click()}\n          >\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              className=\"p-inputtext p-component\"\n              accept=\"image/png, image/jpg, image/jpeg\"\n              onChange={handleImageChange}\n              hidden\n            />\n            <img className=\"w-full xl:w-6\" src={uploadLogo} alt=\"Preview\" />\n          </span>\n        </div>\n      )}\n\n      {loading && (\n        <div className=\"text-center\">\n          <ProgressSpinner className=\"progress-spinner\" />\n        </div>\n      )}\n\n      {error && (\n        <p className=\"text-center\" style={{ color: 'red' }}>\n          {error}\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default ImgUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}