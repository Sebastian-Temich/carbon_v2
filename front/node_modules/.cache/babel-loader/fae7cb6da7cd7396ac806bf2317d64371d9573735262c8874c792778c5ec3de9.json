{"ast":null,"code":"import{Navigate,useLocation}from'react-router-dom';import{AccessDenied}from'@screens/access-denied/access-denied';import userStore from'@store/user-store';import{ROUTES}from'@utils/routes';import{jsx as _jsx}from\"react/jsx-runtime\";export const ProtectedRoute=_ref=>{let{children,roles}=_ref;const{user}=userStore;const location=useLocation();const userHasRequiredRole=user&&roles.includes(user.roles[0].name);if(!user){return/*#__PURE__*/_jsx(Navigate,{to:ROUTES.Login.path,state:{from:location}});}if(user&&!userHasRequiredRole){return/*#__PURE__*/_jsx(AccessDenied,{});}return children;};","map":{"version":3,"names":["Navigate","useLocation","AccessDenied","userStore","ROUTES","jsx","_jsx","ProtectedRoute","_ref","children","roles","user","location","userHasRequiredRole","includes","name","to","Login","path","state","from"],"sources":["/Users/st/Documents/carbon/front/src/app/protected-route.tsx"],"sourcesContent":["import { Navigate, useLocation } from 'react-router-dom';\n\nimport { AccessDenied } from '@screens/access-denied/access-denied';\nimport userStore from '@store/user-store';\nimport { ROLES } from '@utils/roles';\nimport { ROUTES } from '@utils/routes';\n\nexport const ProtectedRoute = ({\n  children,\n  roles,\n}: {\n  children: JSX.Element;\n  roles: Array<ROLES>;\n}) => {\n  const { user } = userStore;\n  const location = useLocation();\n\n  const userHasRequiredRole = user && roles.includes(user.roles[0].name);\n\n  if (!user) {\n    return <Navigate to={ROUTES.Login.path} state={{ from: location }} />;\n  }\n\n  if (user && !userHasRequiredRole) {\n    return <AccessDenied />;\n  }\n\n  return children;\n};\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CAExD,OAASC,YAAY,KAAQ,sCAAsC,CACnE,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CAEzC,OAASC,MAAM,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,MAAO,MAAM,CAAAC,cAAc,CAAGC,IAAA,EAMxB,IANyB,CAC7BC,QAAQ,CACRC,KAIF,CAAC,CAAAF,IAAA,CACC,KAAM,CAAEG,IAAK,CAAC,CAAGR,SAAS,CAC1B,KAAM,CAAAS,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAY,mBAAmB,CAAGF,IAAI,EAAID,KAAK,CAACI,QAAQ,CAACH,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACK,IAAI,CAAC,CAEtE,GAAI,CAACJ,IAAI,CAAE,CACT,mBAAOL,IAAA,CAACN,QAAQ,EAACgB,EAAE,CAAEZ,MAAM,CAACa,KAAK,CAACC,IAAK,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAER,QAAS,CAAE,CAAE,CAAC,CACvE,CAEA,GAAID,IAAI,EAAI,CAACE,mBAAmB,CAAE,CAChC,mBAAOP,IAAA,CAACJ,YAAY,GAAE,CAAC,CACzB,CAEA,MAAO,CAAAO,QAAQ,CACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}