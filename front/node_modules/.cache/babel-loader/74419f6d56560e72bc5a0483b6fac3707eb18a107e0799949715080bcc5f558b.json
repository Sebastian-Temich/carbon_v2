{"ast":null,"code":"import{makeAutoObservable}from'mobx';import{getTransactionStatuses}from'@api/transactions-api';export class TransactionsStore{constructor(rootStore){this.rootStore=void 0;this.transactionStatuses=[];this.isLoadingTransactionStatuses=true;this.fetchTransactionStatuses=async()=>{if(this.transactionStatuses.length){this.isLoadingTransactionStatuses=false;return;}this.isLoadingTransactionStatuses=true;const transactionStatuses=await getTransactionStatuses();if(Array.isArray(transactionStatuses.data)){this.transactionStatuses=transactionStatuses.data;}this.isLoadingTransactionStatuses=false;};this.findTransactionStatusByName=name=>this.transactionStatuses.find(transactionStatus=>transactionStatus.name===name);this.rootStore=rootStore;makeAutoObservable(this);}}","map":{"version":3,"names":["makeAutoObservable","getTransactionStatuses","TransactionsStore","constructor","rootStore","transactionStatuses","isLoadingTransactionStatuses","fetchTransactionStatuses","length","Array","isArray","data","findTransactionStatusByName","name","find","transactionStatus"],"sources":["/Users/st/Documents/carbon/front/src/store/transactions-store.ts"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport { TransactionStatus, TransactionStatusName } from '@custom-types/transactions-types';\nimport { getTransactionStatuses } from '@api/transactions-api';\nimport { RootStore } from './root-store';\n\nexport class TransactionsStore {\n  rootStore: RootStore;\n\n  transactionStatuses: TransactionStatus[] = [];\n\n  isLoadingTransactionStatuses = true;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n    makeAutoObservable(this);\n  }\n\n  fetchTransactionStatuses = async () => {\n    if (this.transactionStatuses.length) {\n      this.isLoadingTransactionStatuses = false;\n      return;\n    }\n\n    this.isLoadingTransactionStatuses = true;\n\n    const transactionStatuses = await getTransactionStatuses();\n\n    if (Array.isArray(transactionStatuses.data)) {\n      this.transactionStatuses = transactionStatuses.data;\n    }\n\n    this.isLoadingTransactionStatuses = false;\n  };\n\n  findTransactionStatusByName = (name: TransactionStatusName) =>\n    this.transactionStatuses.find((transactionStatus) => transactionStatus.name === name);\n}\n"],"mappings":"AAAA,OAASA,kBAAkB,KAAQ,MAAM,CAEzC,OAASC,sBAAsB,KAAQ,uBAAuB,CAG9D,MAAO,MAAM,CAAAC,iBAAkB,CAO7BC,WAAWA,CAACC,SAAoB,CAAE,MANlCA,SAAS,aAETC,mBAAmB,CAAwB,EAAE,MAE7CC,4BAA4B,CAAG,IAAI,MAOnCC,wBAAwB,CAAG,SAAY,CACrC,GAAI,IAAI,CAACF,mBAAmB,CAACG,MAAM,CAAE,CACnC,IAAI,CAACF,4BAA4B,CAAG,KAAK,CACzC,OACF,CAEA,IAAI,CAACA,4BAA4B,CAAG,IAAI,CAExC,KAAM,CAAAD,mBAAmB,CAAG,KAAM,CAAAJ,sBAAsB,CAAC,CAAC,CAE1D,GAAIQ,KAAK,CAACC,OAAO,CAACL,mBAAmB,CAACM,IAAI,CAAC,CAAE,CAC3C,IAAI,CAACN,mBAAmB,CAAGA,mBAAmB,CAACM,IAAI,CACrD,CAEA,IAAI,CAACL,4BAA4B,CAAG,KAAK,CAC3C,CAAC,MAEDM,2BAA2B,CAAIC,IAA2B,EACxD,IAAI,CAACR,mBAAmB,CAACS,IAAI,CAAEC,iBAAiB,EAAKA,iBAAiB,CAACF,IAAI,GAAKA,IAAI,CAAC,CAtBrF,IAAI,CAACT,SAAS,CAAGA,SAAS,CAC1BJ,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAqBF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}