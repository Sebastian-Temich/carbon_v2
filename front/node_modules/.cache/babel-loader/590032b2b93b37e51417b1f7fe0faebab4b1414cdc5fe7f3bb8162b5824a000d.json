{"ast":null,"code":"import i18next from'i18next';import LanguageDetector from'i18next-browser-languagedetector';import{initReactI18next}from'react-i18next';import{Polish}from'./locales/Polish';import{English}from'./locales/English';// the resources is used to render trans files PL is the default\nconst resources={pl:{translation:Polish},en:{translation:English}};// Seting the lan in to localStorege direclty with the help of LanguageDetector\nconst DETECTION_OPTIONS={order:['localStorage'],caches:['localStorage']};// Inside init it was throwing error on input labels\nconst i18n=i18next.createInstance({lng:'en'});// here we are seeting up the default lang\ni18n.use(LanguageDetector).use(initReactI18next).init({detection:DETECTION_OPTIONS,resources,fallbackLng:'pl',defaultNS:'translation',interpolation:{escapeValue:false}});export default i18n;","map":{"version":3,"names":["i18next","LanguageDetector","initReactI18next","Polish","English","resources","pl","translation","en","DETECTION_OPTIONS","order","caches","i18n","createInstance","lng","use","init","detection","fallbackLng","defaultNS","interpolation","escapeValue"],"sources":["/Users/st/Documents/carbon/front/src/i18n/i18.ts"],"sourcesContent":["import i18next from 'i18next';\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nimport { Polish } from './locales/Polish';\nimport { English } from './locales/English';\n\n// the resources is used to render trans files PL is the default\nconst resources = {\n  pl: { translation: Polish },\n  en: { translation: English },\n};\n\n// Seting the lan in to localStorege direclty with the help of LanguageDetector\nconst DETECTION_OPTIONS = {\n  order: ['localStorage'],\n  caches: ['localStorage'],\n};\n\n// Inside init it was throwing error on input labels\ndeclare module 'i18next' {\n  interface CustomTypeOptions {\n    returnNull: false;\n  }\n}\n\nconst i18n = i18next.createInstance({\n  lng: 'en',\n});\n\n// here we are seeting up the default lang\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    detection: DETECTION_OPTIONS,\n    resources,\n    fallbackLng: 'pl',\n    defaultNS: 'translation',\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n"],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,SAAS,CAE7B,MAAO,CAAAC,gBAAgB,KAAM,kCAAkC,CAC/D,OAASC,gBAAgB,KAAQ,eAAe,CAEhD,OAASC,MAAM,KAAQ,kBAAkB,CACzC,OAASC,OAAO,KAAQ,mBAAmB,CAE3C;AACA,KAAM,CAAAC,SAAS,CAAG,CAChBC,EAAE,CAAE,CAAEC,WAAW,CAAEJ,MAAO,CAAC,CAC3BK,EAAE,CAAE,CAAED,WAAW,CAAEH,OAAQ,CAC7B,CAAC,CAED;AACA,KAAM,CAAAK,iBAAiB,CAAG,CACxBC,KAAK,CAAE,CAAC,cAAc,CAAC,CACvBC,MAAM,CAAE,CAAC,cAAc,CACzB,CAAC,CAED;AAOA,KAAM,CAAAC,IAAI,CAAGZ,OAAO,CAACa,cAAc,CAAC,CAClCC,GAAG,CAAE,IACP,CAAC,CAAC,CAEF;AACAF,IAAI,CACDG,GAAG,CAACd,gBAAgB,CAAC,CACrBc,GAAG,CAACb,gBAAgB,CAAC,CACrBc,IAAI,CAAC,CACJC,SAAS,CAAER,iBAAiB,CAC5BJ,SAAS,CACTa,WAAW,CAAE,IAAI,CACjBC,SAAS,CAAE,aAAa,CACxBC,aAAa,CAAE,CACbC,WAAW,CAAE,KACf,CACF,CAAC,CAAC,CAEJ,cAAe,CAAAT,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}