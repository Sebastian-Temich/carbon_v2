version: '3.8'

services:
  backend:
    build:
      context: ./backend
    container_name: carbon
    hostname: carbon
    ports:
      - "9001:8000"
    environment:
      # Local envs
      DEBUG: "True"
      PORT: "8000"
      # Database
      DATABASE_URI: "postgresql://postgres:koziserek@carbon-postgres:5432/postgres"
      DATABASE_SCHEMA: "carbon"
      # JWT
      JWT_SECRET_KEY: "a8f5f167f44f4964e6c998dee827110c"
      JWT_ACCESS_TOKEN_EXPIRES: "3600"
      JWT_REFRESH_TOKEN_EXPIRES: "86400"
      # Blockchain (Testnet settings)
      CONTRACT_ABI: '[{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]'
      ALCHEMY_URL: "https://eth-sepolia.g.alchemy.com/v2/your-api-key"
      CONTRACT_ADDRESS: "0x0000000000000000000000000000000000000000"
      PUBLIC_KEY_METAMASK: "0x0000000000000000000000000000000000000000"
      PRIVATE_KEY_METAMASK: "0x0000000000000000000000000000000000000000000000000000000000000000"
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - carbon-network

  frontend:
    build:
      context: ./front
    container_name: frontend-carbon
    hostname: frontend-carbon
    ports:
      - "3001:3001"
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - carbon-network

  postgres:
    image: postgres:15-alpine
    container_name: carbon-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: koziserek
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - carbon-network

volumes:
  postgres_data:

networks:
  carbon-network:
    driver: bridge
